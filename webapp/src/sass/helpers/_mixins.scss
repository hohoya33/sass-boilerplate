
// =============================================================================
// Font Size REM
// =============================================================================
// Set a rem font size with pixel fallback
@function calculate-rem($size) {
    $rem-size: $size / 16px;
    @return $rem-size * 1rem;
}

@mixin font-size($size) {
    font-size: $size;
    font-size: calculate-rem($size);
}

@mixin clearfix {
  &:after {
    clear: both;
    content: "";
    display: block;
  }
}

/*
background-image: url("img/logo.png");
@include retina("img/logo@2x.png", 100px, 21px);
*/
@mixin retina($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
  (-o-min-device-pixel-ratio: 2.6/2),
  (-webkit-min-device-pixel-ratio: 1.3),
  (min-device-pixel-ratio: 1.3),
  (min-resolution: 1.3dppx) {
    /* Serving 2x image on Retina display */
    background-image: url($image);
    background-size: $width $height;
  }
}

// easy retina-ready images
// http://37signals.com/svn/posts/3271-easy-retina-ready-images-using-scss
@mixin image-2x($image, $width, $height) {
  @media (-webkit-min-device-pixel-ratio: 2),
         (min--moz-device-pixel-ratio: 2),
         (-o-min-device-pixel-ratio: 2/1),
         (min-device-pixel-ratio: 2),
         (min-resolution: 192dpi),
         (min-resolution: 2dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

// use full size of 1x image
//@include image-2x("../img/NAME@2x.png", WIDTHpx, HEIGHTpx);



// Media Queries
// --------------------------------
@mixin between-breakpoints($min, $max) {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  }

@mixin max-breakpoint($point) {
  @if $point == screen-xl {
    @media (max-width: 1320px) { @content; }
  } @else if $point == screen-lg {
    @media (max-width: 1280px) { @content; }
  } @else if $point == screen-md {
    @media (max-width: 992px) { @content; }
  } @else if $point == screen-sm {
    @media (max-width: 768px)  { @content; }
  } @else if $point == iphone5-horizontal {
    @media (max-width: 568px)  { @content; }
  } @else if $point == screen-xs {
    @media (max-width: 480px)  { @content; }
  } @else if $point == mobile {
    @media (max-width: 340px)  { @content; }
  }
}

@mixin min-breakpoint($point) {
  @if $point == screen-xl {
    @media (min-width: 1320px) { @content; }
  } @else if $point == screen-lg {
    @media (min-width: 1280px) { @content; }
  } @else if $point == screen-md {
    @media (min-width: 992px) { @content; }
  } @else if $point == screen-sm {
    @media (min-width: 768px)  { @content; }
  } @else if $point == iphone5-horizontal {
    @media (min-width: 568px)  { @content; }
  } @else if $point == screen-xs {
    @media (min-width: 480px)  { @content; }
  } @else if $point == mobile {
    @media (min-width: 340px)  { @content; }
  }
}





@mixin screen($size) {
  $desktop: "(min-width: 1024px)";
  $tablet: "(min-width: 768px) and (max-width: 1023px)";
  $mobile: "(max-width: 767px)";
  @if $size == desktop {
    @media only screen and #{$desktop} {
      @content;
    }
  }
  @else if $size == tablet {
    @media only screen and #{$tablet} {
      @content;
    }
  }
  @else if $size == mobile {
    @media only screen and #{$mobile} {
      @content;
    }
  }
  @else {
    @media only screen and #{$size} {
      @content;
    }
  }
}